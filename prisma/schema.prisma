generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  color String
  notes String
  shelf Shelf[]
}

enum ShelfType {
  small
  big
  brak
}

model Shelf {
  id         Int       @id @default(autoincrement())
  name       String
  size       ShelfType
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  item       Item[]
}

model Company {
  id    Int    @id @default(autoincrement())
  name  String @unique
  notes String
  item  Item[]
}

model Status {
  id          Int      @id @default(autoincrement())
  itemId      Int
  item        Item     @relation(fields: [itemId], references: [id])
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Item {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  placeId         Int
  shelfId         Int
  shelf           Shelf            @relation(fields: [shelfId], references: [id])
  shelfType       String
  itemTypeId      Int
  itemType        ItemType         @relation(fields: [itemTypeId], references: [id])
  attributeValue  AttributeValue[]
  status          Status[]
  company         Company          @relation(fields: [companyId], references: [id])
  companyId       Int
  isDeleted       Boolean          @default(false)
  isOrder         Boolean          @default(false)
  orderCategory   OrderCategory?   @relation(fields: [orderCategoryId], references: [id])
  orderCategoryId Int?
}

model OrderCategory {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  color       String
  Item        Item[]
}

model ItemType {
  id           Int             @id @default(autoincrement())
  name         String          @unique
  item         Item[]
  typettribute Typeattribute[]
}

model Typeattribute {
  id             Int              @id @default(autoincrement())
  name           String
  itemtypeId     Int
  itemtype       ItemType         @relation(fields: [itemtypeId], references: [id])
  attributeValue AttributeValue[]
}

model AttributeValue {
  id              Int           @id @default(autoincrement())
  value           String
  itemId          Int
  item            Item          @relation(fields: [itemId], references: [id])
  typeattributeId Int
  typeattribute   Typeattribute @relation(fields: [typeattributeId], references: [id])
}
